tenantId: "04c72f56-1848-46a2-8167-8e5d36510cbc"
aliasname: "appsettings.json"
deployment:
  name: "commonservice-deployment"
  app: "commonservice"
  nodeSelector: "linux"
  tolerations:
  - key: "superappapi" 
    value: "true"
    effect: "NoSchedule"
    operator: "Equal"
labels:
    app: "commonservice"
  selector:
    matchLabels:
      app: "commonservice"
  podLabels:
    app: "commonservice"
  maxSurge: 25%
  maxUnavailable: 25%
  replica: 1
  containerPort: 80
  resources:
    requests:
      cpu: "128m"
      memory: "128Mi"
    limit:
      cpu: "300m"
      memory: "512Mi"
  readinessProbe:
    path: /api/home
    port: 80
    initialDelaySeconds: 15
    periodSeconds: 5
  livenessProbe:
    path: /api/home
    port: 80
    initialDelaySeconds: 15
    periodSeconds: 5
service:
  name: "commonservice-api-service"
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  selector:
    app: "commonservice"
  type: ClusterIP
  port: 80
  targetPort: 80
ext_name:
  name: "commonservice-api-service-ext"
hpa:
  name: "commonservice-hpa"
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 70
volumeMounts:
  name: "secrets-store01-inline"
  mountPath: "/app/appsettings.json"
  subPath: "appsettings.json" 
volumes:
  name: "secrets-store01-inline"
  csi:
    driver: "secrets-store.csi.k8s.io"
    readOnly: "true"
    volumeAttributes:
      secretProviderClass: "azure-kvname-system-msi-common-service" 

keyvaultName: "az-adl-sa-stage-keyvault"
objectName: "adl-sa-stage-common-service-env"
source:
 name: "/app/adl-sa-stage-common-service-env"
destination:
 name: "/app/appsettings.json"

 #########
metadata: 
  name: "az-adl-commomservice-api-ingress"
  namespace: "airport-api"
spec: 
  ingressClassName: "nginx"
  rules: 
    host: "common-service.uat.adanione.com"
    http:
      paths:
        backend: 
         service:
           name: "commonservice-api-service"
           port: 
             number: 80
        path: /
        pathType: ImplementationSpecific 
secretName: "uatadanione-tls-cert"